class Solution {
    public List<List<String>> solveNQueens(int n) {
        List<List<String>> allBoards=new ArrayList<>();
        char board[][]=new char[n][n];
        helper(board,allBoards,0);
        return allBoards;
    }
    public void helper(char[][] board, List<List<String>> allBoards, int col){
        if(col==board.length){
            saveBoard(board,allBoards);
            return;
        }
        for(int row=0;row<board.length;row++){
            if(isSafe(row,col,board)){
                board[row][col]='Q';
                helper(board,allBoards,col+1);
                board[row][col]='.';
            }
        }
    }
    public boolean isSafe(int row, int col, char[][] board){
        // horizontal check
        for(int j=0;j<board.length;j++){
            if(board[row][j]=='Q')
                return false;
        }
        // vertical check
        for(int i=0;i<board.length;i++){
            if(board[i][col]=='Q')
                return false;
        }
        // upper left
        for(int i=row,j=col;i>=0 && j>=0;i--,j--){
            if(board[i][j]=='Q')
                return false;
        }
        // upper right
        for(int i=row,j=col;i>=0 && j<board.length;i--,j++){
            if(board[i][j]=='Q')
                return false;
        }
        // lower left
        for(int i=row,j=col;i<board.length && j>=0;i++,j--){
            if(board[i][j]=='Q')
                return false;
        }
        // lower right
        for(int i=row,j=col;i<board.length && j<board.length;i++,j++){
            if(board[i][j]=='Q')
                return false;
        }
        return true;
    }
    public void saveBoard(char [][]board, List<List<String>> allBoards){
        String ans="";
        List<String> newBoard=new ArrayList<>();
        for(int i=0;i<board.length;i++){
            ans="";
            for(int j=0;j<board.length;j++){
                if(board[i][j]=='Q')
                    ans+='Q';
                else
                    ans+='.';
            }
            newBoard.add(ans);
        }
        allBoards.add(newBoard);
    }
}
