/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(left==right)
            return head;
        ListNode head1=head;
        ListNode finalhead=head;
        Stack<Integer> st=new Stack<>();
        int c=1;
        while(c<left){
            head=head.next;
            c++;
        }
        int start=c;
        while(c<=right){
            st.push(head.val);
            head=head.next;
            c++;
        }
        int cnt=1;
        while(cnt<start){
            head1=head1.next;
            cnt++;
        }
        while(!st.isEmpty()){
            head1.val=st.pop();
            head1=head1.next;
        }
        return finalhead;
    }
}
