class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        find_combinations(0,candidates,target,ans,new ArrayList<>());
        return ans;
    }
    static void find_combinations(int i, int arr[], int target, List<List<Integer>> ans, List<Integer> ds){
        if(i==arr.length){
            if(target==0)
                ans.add(new ArrayList<>(ds));
            return;
        }
        if(arr[i]<=target){
            ds.add(arr[i]);
            find_combinations(i,arr,target-arr[i],ans,ds);      // pick case
            ds.remove(ds.size()-1);
        }
        find_combinations(i+1,arr,target,ans,ds);               // not pick case
    }
}
